import{_ as d}from"./run-test-ShHqV4m3.js";import{_ as r,c as u,a as n,d as e,w as l,e as c,b as a,r as i,o as m}from"./app-CsrY3L-Q.js";const k={},v={href:"https://github.com/medivh-project/medivh-demo-kotlin",target:"_blank",rel:"noopener noreferrer"};function g(h,s){const t=i("CodeGroupItem"),p=i("CodeGroup"),o=i("ExternalLinkIcon");return m(),u("div",null,[s[7]||(s[7]=n("h2",{id:"引入gradle插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#引入gradle插件"},[n("span",null,"引入gradle插件")])],-1)),e(p,null,{default:l(()=>[e(t,{title:"kotlin DSL"},{default:l(()=>s[0]||(s[0]=[n("div",{class:"language-kts line-numbers-mode","data-highlighter":"prismjs","data-ext":"kts","data-title":"kts"},[n("pre",{class:"language-kts"},[n("code",null,[n("span",{class:"line"},[n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"tech.medivh.plugin.gradle"')]),n("span",{class:"token punctuation"},")"),a(" version "),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"0.0.1"')])]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),_:1}),e(t,{title:"Groovy DSL"},{default:l(()=>s[1]||(s[1]=[n("div",{class:"language-gradle line-numbers-mode","data-highlighter":"prismjs","data-ext":"gradle","data-title":"gradle"},[n("pre",{class:"language-gradle"},[n("code",null,[n("span",{class:"line"},[a("id "),n("span",{class:"token string"},"'tech.medivh.plugin.gradle'"),a(" version "),n("span",{class:"token string"},"'0.0.1'")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),s[8]||(s[8]=c(`<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">警告</p><p>如果你是通过源码构建，别忘了在<code>setting.gradle</code>中添加 <code>mavenLocal()</code>配置</p><div class="language-gradle line-numbers-mode" data-highlighter="prismjs" data-ext="gradle" data-title="gradle"><pre class="language-gradle"><code><span class="line">pluginManagement <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">repositories</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">gradlePluginPortal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><br><h2 id="配置-medivh" tabindex="-1"><a class="header-anchor" href="#配置-medivh"><span>配置 Medivh</span></a></h2><p>构建完成之后，你可以直接在 Gradle配置文件中使用 Medivh</p>`,4)),e(p,null,{default:l(()=>[e(t,{title:"kotlin DSL"},{default:l(()=>s[2]||(s[2]=[n("div",{class:"language-kts line-numbers-mode","data-highlighter":"prismjs","data-ext":"kts","data-title":"kts"},[n("pre",{class:"language-kts"},[n("code",null,[n("span",{class:"line"},[a("medivh "),n("span",{class:"token punctuation"},"{")]),a(`
`),n("span",{class:"line"},[a("    "),n("span",{class:"token function"},"include"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"com.example"')]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 你的包名")]),a(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),e(t,{title:"Groovy DSL"},{default:l(()=>s[3]||(s[3]=[n("div",{class:"language-gradle line-numbers-mode","data-highlighter":"prismjs","data-ext":"gradle","data-title":"gradle"},[n("pre",{class:"language-gradle"},[n("code",null,[n("span",{class:"line"},[a("medivh "),n("span",{class:"token punctuation"},"{")]),a(`
`),n("span",{class:"line"},[a("    include "),n("span",{class:"token string"},"'tech.medivh'"),a(),n("span",{class:"token comment"},"// your package name here")]),a(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),s[9]||(s[9]=c(`<h2 id="在需要的地方加注解" tabindex="-1"><a class="header-anchor" href="#在需要的地方加注解"><span>在需要的地方加注解</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="line"><span class="token keyword">package</span> tech<span class="token punctuation">.</span>medivh<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>kotlin</span>
<span class="line"><span class="token comment">//  注意这里的包要和配置的包一致</span></span>
<span class="line"><span class="token keyword">import</span> tech<span class="token punctuation">.</span>medivh<span class="token punctuation">.</span>api<span class="token punctuation">.</span>DebugTime</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> DemoClass <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation builtin">@DebugTime</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello World&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编写测试" tabindex="-1"><a class="header-anchor" href="#编写测试"><span>编写测试</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="line"><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span>Test</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> DemoClassTest<span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation builtin">@Test</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">testDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> demoClass <span class="token operator">=</span> <span class="token function">DemoClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            demoClass<span class="token punctuation">.</span><span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在你的-ide中执行" tabindex="-1"><a class="header-anchor" href="#在你的-ide中执行"><span>在你的 IDE中执行</span></a></h2><p><img src="`+d+`" alt="Run your test"></p><h2 id="或者使用命令" tabindex="-1"><a class="header-anchor" href="#或者使用命令"><span>或者使用命令</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">./gradlew <span class="token builtin class-name">test</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="查看控制台输出" tabindex="-1"><a class="header-anchor" href="#查看控制台输出"><span>查看控制台输出</span></a></h2><p>你会看到类似于这样的输出:</p><blockquote><p>you can open file:///xxx/report.html to see the report</p></blockquote><p>点击上面的链接，你将看到你的测试报告</p><h2 id="完整示例" tabindex="-1"><a class="header-anchor" href="#完整示例"><span>完整示例</span></a></h2>`,13)),n("p",null,[s[5]||(s[5]=a("这里有一个完整示例，你可以参考这个")),n("a",v,[s[4]||(s[4]=a("示例")),e(o)]),s[6]||(s[6]=a("来使用Medivh"))])])}const x=r(k,[["render",g],["__file","use.html.vue"]]),w=JSON.parse('{"path":"/docs/guide/use.html","title":"使用","lang":"zh-CN","frontmatter":{"title":"使用"},"headers":[{"level":2,"title":"引入gradle插件","slug":"引入gradle插件","link":"#引入gradle插件","children":[]},{"level":2,"title":"配置 Medivh","slug":"配置-medivh","link":"#配置-medivh","children":[]},{"level":2,"title":"在需要的地方加注解","slug":"在需要的地方加注解","link":"#在需要的地方加注解","children":[]},{"level":2,"title":"编写测试","slug":"编写测试","link":"#编写测试","children":[]},{"level":2,"title":"在你的 IDE中执行","slug":"在你的-ide中执行","link":"#在你的-ide中执行","children":[]},{"level":2,"title":"或者使用命令","slug":"或者使用命令","link":"#或者使用命令","children":[]},{"level":2,"title":"查看控制台输出","slug":"查看控制台输出","link":"#查看控制台输出","children":[]},{"level":2,"title":"完整示例","slug":"完整示例","link":"#完整示例","children":[]}],"git":{"createdTime":1727159253000,"updatedTime":1727344419000,"contributors":[{"name":"Xuan-Zhang Gong","email":"gongxuanzhangmelt@gmail.com","commits":4}]},"filePathRelative":"docs/guide/use.md"}');export{x as comp,w as data};
