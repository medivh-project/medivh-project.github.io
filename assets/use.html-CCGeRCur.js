import{_ as r}from"./run-test-ShHqV4m3.js";import{_ as u,c as d,a as n,d as e,w as l,e as p,b as a,r as i,o as m}from"./app-CsrY3L-Q.js";const k={},g={href:"https://github.com/medivh-project/medivh-demo-kotlin",target:"_blank",rel:"noopener noreferrer"};function v(h,s){const t=i("CodeGroupItem"),o=i("CodeGroup"),c=i("ExternalLinkIcon");return m(),d("div",null,[s[7]||(s[7]=n("h2",{id:"import-gradle-plugin",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#import-gradle-plugin"},[n("span",null,"import gradle plugin")])],-1)),e(o,null,{default:l(()=>[e(t,{title:"kotlin DSL"},{default:l(()=>s[0]||(s[0]=[n("div",{class:"language-kts line-numbers-mode","data-highlighter":"prismjs","data-ext":"kts","data-title":"kts"},[n("pre",{class:"language-kts"},[n("code",null,[n("span",{class:"line"},[n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"tech.medivh.plugin.gradle"')]),n("span",{class:"token punctuation"},")"),a(" version "),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"0.0.1"')])]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),_:1}),e(t,{title:"Groovy DSL"},{default:l(()=>s[1]||(s[1]=[n("div",{class:"language-gradle line-numbers-mode","data-highlighter":"prismjs","data-ext":"gradle","data-title":"gradle"},[n("pre",{class:"language-gradle"},[n("code",null,[n("span",{class:"line"},[a("id "),n("span",{class:"token string"},"'tech.medivh.plugin.gradle'"),a(" version "),n("span",{class:"token string"},"'0.0.1'")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),s[8]||(s[8]=p(`<div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><p>If you build from source, don&#39;t forget to add <code>mavenLocal()</code> in <code>setting.gradle</code></p><div class="language-gradle line-numbers-mode" data-highlighter="prismjs" data-ext="gradle" data-title="gradle"><pre class="language-gradle"><code><span class="line">pluginManagement <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">repositories</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">gradlePluginPortal</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><br><h2 id="config-medivh" tabindex="-1"><a class="header-anchor" href="#config-medivh"><span>config Medivh</span></a></h2><p>You can use Medivh in your Gradle file after build</p>`,4)),e(o,null,{default:l(()=>[e(t,{title:"kotlin DSL"},{default:l(()=>s[2]||(s[2]=[n("div",{class:"language-kts line-numbers-mode","data-highlighter":"prismjs","data-ext":"kts","data-title":"kts"},[n("pre",{class:"language-kts"},[n("code",null,[n("span",{class:"line"},[a("medivh "),n("span",{class:"token punctuation"},"{")]),a(`
`),n("span",{class:"line"},[a("    "),n("span",{class:"token function"},"include"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"com.example"')]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// your package name here")]),a(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),e(t,{title:"Groovy DSL"},{default:l(()=>s[3]||(s[3]=[n("div",{class:"language-gradle line-numbers-mode","data-highlighter":"prismjs","data-ext":"gradle","data-title":"gradle"},[n("pre",{class:"language-gradle"},[n("code",null,[n("span",{class:"line"},[a("medivh "),n("span",{class:"token punctuation"},"{")]),a(`
`),n("span",{class:"line"},[a("    include "),n("span",{class:"token string"},"'tech.medivh'"),a(),n("span",{class:"token comment"},"// your package name here")]),a(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),a(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1})]),_:1}),s[9]||(s[9]=p(`<h2 id="add-annotation-to-your-code" tabindex="-1"><a class="header-anchor" href="#add-annotation-to-your-code"><span>add annotation to your code</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="line"><span class="token keyword">package</span> tech<span class="token punctuation">.</span>medivh<span class="token punctuation">.</span>demo<span class="token punctuation">.</span>kotlin</span>
<span class="line"><span class="token comment">//  package name must be the same as the package name you configured in the gradle file</span></span>
<span class="line"><span class="token keyword">import</span> tech<span class="token punctuation">.</span>medivh<span class="token punctuation">.</span>api<span class="token punctuation">.</span>DebugTime</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> DemoClass <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation builtin">@DebugTime</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello World&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="write-test-case" tabindex="-1"><a class="header-anchor" href="#write-test-case"><span>write test case</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre class="language-kotlin"><code><span class="line"><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span>Test</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> DemoClassTest<span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation builtin">@Test</span></span>
<span class="line">    <span class="token keyword">fun</span> <span class="token function">testDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> demoClass <span class="token operator">=</span> <span class="token function">DemoClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            demoClass<span class="token punctuation">.</span><span class="token function">helloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="run-case-in-your-ide" tabindex="-1"><a class="header-anchor" href="#run-case-in-your-ide"><span>Run case in your IDE</span></a></h2><p><img src="`+r+`" alt="Run your test"></p><h2 id="or-run-in-terminal" tabindex="-1"><a class="header-anchor" href="#or-run-in-terminal"><span>Or run in terminal</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">./gradlew <span class="token builtin class-name">test</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="see-the-console-output" tabindex="-1"><a class="header-anchor" href="#see-the-console-output"><span>see the console output</span></a></h2><p>you will see output like this:</p><blockquote><p>you can open file:///xxx/report.html to see the report</p></blockquote><p>click the link above, you will see your Medivh report</p><h2 id="complete-example" tabindex="-1"><a class="header-anchor" href="#complete-example"><span>Complete Example</span></a></h2>`,13)),n("p",null,[s[5]||(s[5]=a("this is a complete example, you can refer to this ")),n("a",g,[s[4]||(s[4]=a("example")),e(c)]),s[6]||(s[6]=a(" to use Medivh"))])])}const y=u(k,[["render",v],["__file","use.html.vue"]]),x=JSON.parse('{"path":"/en/docs/guide/use.html","title":"Use","lang":"en-US","frontmatter":{"title":"Use"},"headers":[{"level":2,"title":"import gradle plugin","slug":"import-gradle-plugin","link":"#import-gradle-plugin","children":[]},{"level":2,"title":"config Medivh","slug":"config-medivh","link":"#config-medivh","children":[]},{"level":2,"title":"add annotation to your code","slug":"add-annotation-to-your-code","link":"#add-annotation-to-your-code","children":[]},{"level":2,"title":"write test case","slug":"write-test-case","link":"#write-test-case","children":[]},{"level":2,"title":"Run case in your IDE","slug":"run-case-in-your-ide","link":"#run-case-in-your-ide","children":[]},{"level":2,"title":"Or run in terminal","slug":"or-run-in-terminal","link":"#or-run-in-terminal","children":[]},{"level":2,"title":"see the console output","slug":"see-the-console-output","link":"#see-the-console-output","children":[]},{"level":2,"title":"Complete Example","slug":"complete-example","link":"#complete-example","children":[]}],"git":{"createdTime":1727159253000,"updatedTime":1727344419000,"contributors":[{"name":"Xuan-Zhang Gong","email":"gongxuanzhangmelt@gmail.com","commits":3}]},"filePathRelative":"en/docs/guide/use.md"}');export{y as comp,x as data};
